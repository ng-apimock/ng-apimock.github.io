(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{102:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return d}));var r=t(0),i=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=i.a.createContext({}),l=function(e){var n=i.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=l(e.components);return i.a.createElement(u.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},b=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),s=l(t),b=r,d=s["".concat(c,".").concat(b)]||s[b]||m[b]||o;return t?i.a.createElement(d,a(a({ref:n},u),{},{components:t})):i.a.createElement(d,a({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,c=new Array(o);c[0]=b;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a.mdxType="string"==typeof e?e:r,c[1]=a;for(var u=2;u<o;u++)c[u]=t[u];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},84:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return a})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return l}));var r=t(3),i=t(8),o=(t(0),t(102)),c={id:"custom-plugin",title:"Custom plugin",sidebar_label:"Custom plugin",description:"How do I create a custom plugin for @ng-apimock?",custom_edit_url:"https://github.com/ng-apimock/base-client/edit/master/docs/custom-plugin.md",keywords:["ng-apimock","core","api","custom","plugin"]},a={unversionedId:"plugins/custom-plugin",id:"plugins/custom-plugin",isDocsHomePage:!1,title:"Custom plugin",description:"How do I create a custom plugin for @ng-apimock?",source:"@site/docs/plugins/custom-plugin.md",slug:"/plugins/custom-plugin",permalink:"/docs/plugins/custom-plugin",editUrl:"https://github.com/ng-apimock/base-client/edit/master/docs/custom-plugin.md",version:"current",sidebar_label:"Custom plugin",sidebar:"docs",previous:{title:"Cypress plugin",permalink:"/docs/plugins/cypress-plugin"},next:{title:"Select scenario",permalink:"/docs/api/select-scenario"}},p=[{value:"Requirements",id:"requirements",children:[]},{value:"Dependencies using npm / yarn",id:"dependencies-using-npm--yarn",children:[]},{value:"Create your own plugin",id:"create-your-own-plugin",children:[]},{value:"API",id:"api",children:[]}],u={toc:p};function l(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"You can extend ",Object(o.b)("a",{parentName:"p",href:"https://github.com/ng-apimock/core"},"@ng-apimock/core")," by creating your own plugin.\nIn order to do so you need to implement a client based on ",Object(o.b)("a",{parentName:"p",href:"https://github.com/ng-apimock/base-client"},"@ng-apimock/base-client")),Object(o.b)("h2",{id:"requirements"},"Requirements"),Object(o.b)("p",null,"see Ng-apimock ",Object(o.b)("a",{parentName:"p",href:"/docs/#requirements"},"requirements")),Object(o.b)("h2",{id:"dependencies-using-npm--yarn"},"Dependencies using npm / yarn"),Object(o.b)("p",null,"In order to create a custom plugin, you need to extend the ",Object(o.b)("a",{parentName:"p",href:"https://github.com/ng-apimock/base-client"},"@ng-apimock/base-client"),".\nAdd the dependency to you project."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"npm install @ng-apimock/base-client --save\n")),Object(o.b)("p",null,"or "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"yarn add @ng-apimock/base-client\n")),Object(o.b)("h2",{id:"create-your-own-plugin"},"Create your own plugin"),Object(o.b)("p",null,"Once the dependency has been installed, you can start by implementing the plugin."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"import { BaseClient } from '@ng-apimock/base-client';\n\nexport class MyCustomClient extends BaseClient {\n    constructor(baseUrl: string) {\n        super(baseUrl);\n    }\n\n    /** {@inheritDoc}. */\n    async openUrl(url: string): Promise<any> {\n        // TODO implement how the http call to the given url will be processed\n    }\n\n    /** {@inheritDoc}. */\n    async setCookie(name: string, value: string): Promise<any> {\n        // TODO implement how the http cookie will be set  \n    }\n}\n")),Object(o.b)("h2",{id:"api"},"API"),Object(o.b)("p",null,"See ",Object(o.b)("a",{parentName:"p",href:"/docs/api/select-scenario"},"API")))}l.isMDXComponent=!0}}]);