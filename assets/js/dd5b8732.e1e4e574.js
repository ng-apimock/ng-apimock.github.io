"use strict";(self.webpackChunk_ng_apimock_docs=self.webpackChunk_ng_apimock_docs||[]).push([[266],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),l=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(o.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=l(t),d=a,f=m["".concat(o,".").concat(d)]||m[d]||u[d]||i;return t?r.createElement(f,p(p({ref:n},s),{},{components:t})):r.createElement(f,p({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,p=new Array(i);p[0]=m;var c={};for(var o in n)hasOwnProperty.call(n,o)&&(c[o]=n[o]);c.originalType=e,c.mdxType="string"==typeof e?e:a,p[1]=c;for(var l=2;l<i;l++)p[l]=t[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8372:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return o},metadata:function(){return l},toc:function(){return s},default:function(){return m}});var r=t(3117),a=t(102),i=(t(7294),t(3905)),p=["components"],c={id:"dev-interface",title:"Development interface",sidebar_label:"Development interface"},o=void 0,l={unversionedId:"plugins/dev-interface",id:"plugins/dev-interface",isDocsHomePage:!1,title:"Development interface",description:"@ng-apimock/dev-interface is the development interface for @ng-apimock/core.",source:"@site/docs/plugins/dev-interface.md",sourceDirName:"plugins",slug:"/plugins/dev-interface",permalink:"/docs/plugins/dev-interface",editUrl:"https://github.com/ng-apimock/ng-apimock.github.io/tree/develop/docs/docs/plugins/dev-interface.md",tags:[],version:"current",lastUpdatedBy:"Mischa Dasberg",frontMatter:{id:"dev-interface",title:"Development interface",sidebar_label:"Development interface"},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/plugins/plugin-introduction"},next:{title:"Protractor plugin",permalink:"/docs/plugins/protractor-plugin"}},s=[{value:"Requirements",id:"requirements",children:[],level:2},{value:"Installing using npm / yarn",id:"installing-using-npm--yarn",children:[],level:2},{value:"Usage",id:"usage",children:[{value:"Middleware",id:"middleware",children:[],level:3},{value:"Minimal setup example",id:"minimal-setup-example",children:[],level:3}],level:2}],u={toc:s};function m(e){var n=e.components,t=(0,a.Z)(e,p);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ng-apimock/dev-interface"},"@ng-apimock/dev-interface")," is the development interface for ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ng-apimock/core"},"@ng-apimock/core"),"."),(0,i.kt)("p",null,"The development interface is a small web application that connects to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ng-apimock/core"},"@ng-apimock/core")," middelware and exposes all its features in the ui."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"/img/dev-interface.png",alt:"alt text",title:"Development interface"})),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("p",null,"see Ng-apimock ",(0,i.kt)("a",{parentName:"p",href:"/docs/#requirements"},"requirements")),(0,i.kt)("h2",{id:"installing-using-npm--yarn"},"Installing using npm / yarn"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @ng-apimock/dev-interface --save-dev\n")),(0,i.kt)("p",null,"or "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @ng-apimock/dev-interface --dev\n")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"Once the plugin has been installed, you can require it with this line of JavaScript:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const devInterface = require('@ng-apimock/dev-interface');\n")),(0,i.kt)("h3",{id:"middleware"},"Middleware"),(0,i.kt)("p",null,"The final step to take is to register ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ng-apimock/core"},"@ng-apimock/core")," as middleware. It is compatible with both ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/connect"},"Connect")," and ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/express"},"Express")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const connect = require('connect');\nconst app = connect();\n\napp.use('/dev-interface/', serveStatic(devInterface));\n")),(0,i.kt)("p",null,"or "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const express = require('express');\nconst app = express();\n\napp.use('/dev-interface', express.static(devInterface));\n")),(0,i.kt)("h3",{id:"minimal-setup-example"},"Minimal setup example"),(0,i.kt)("p",null,"This is a minimal setup example of how you can manually use @ng-apimock/core"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const apimock = require('@ng-apimock/core');\nconst devInterface = require('@ng-apimock/dev-interface');\nconst express = require('express');\nconst app = express();\napp.set('port', 9999);\n\napimock.processor.process({\n    src: 'mocks'\n});\n\napp.use(apimock.middleware);\napp.use('/dev-interface', express.static(devInterface));\n\napp.listen(app.get('port'), () => {\n    console.log('@ng-apimock/core running on port', app.get('port'));\n    console.log('@ng-apimock/dev-interface is available under /dev-interface');\n});\n")),(0,i.kt)("p",null,"To start up the script just type:  "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"node serve.js\n")),(0,i.kt)("p",null,"The development interface can now be used by navigating to ",(0,i.kt)("a",{parentName:"p",href:"http://localhost:9000/dev-interface"},"http://localhost:9000/dev-interface"),"."))}m.isMDXComponent=!0}}]);