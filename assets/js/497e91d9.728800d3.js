(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{103:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),s=u(n),b=r,m=s["".concat(i,".").concat(b)]||s[b]||g[b]||o;return n?a.a.createElement(m,c(c({ref:t},l),{},{components:n})):a.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},86:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(8),o=(n(0),n(103)),i={id:"protractor-plugin",title:"Protractor plugin",sidebar_label:"Protractor plugin",description:"How do I use the protractor plugin for @ng-apimock?",custom_edit_url:"https://github.com/ng-apimock/protractor-plugin/edit/master/docs/protractor-plugin.md",keywords:["ng-apimock","core","api","protractor","plugin","automated testing"]},c={unversionedId:"plugins/protractor-plugin",id:"plugins/protractor-plugin",isDocsHomePage:!1,title:"Protractor plugin",description:"How do I use the protractor plugin for @ng-apimock?",source:"@site/docs/plugins/protractor-plugin.md",slug:"/plugins/protractor-plugin",permalink:"/docs/plugins/protractor-plugin",editUrl:"https://github.com/ng-apimock/protractor-plugin/edit/master/docs/protractor-plugin.md",version:"current",sidebar_label:"Protractor plugin",sidebar:"docs",previous:{title:"Development interface",permalink:"/docs/plugins/dev-interface"},next:{title:"Webdriverio service",permalink:"/docs/plugins/wdio-ng-apimock-service"}},p=[{value:"Requirements",id:"requirements",children:[]},{value:"Installing using npm / yarn",id:"installing-using-npm--yarn",children:[]},{value:"Usage",id:"usage",children:[{value:"Plugin configuration",id:"plugin-configuration",children:[]}]},{value:"Using in tests",id:"using-in-tests",children:[]},{value:"API",id:"api",children:[]}],l={toc:p};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/@ng-apimock/protractor-plugin"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@ng-apimock/protractor-plugin?color=brightgreen",alt:"npm"}))," ",Object(o.b)("a",{parentName:"p",href:"https://github.com/ng-apimock/protractor-plugin/actions?workflow=CI"},Object(o.b)("img",{parentName:"a",src:"https://github.com/ng-apimock/protractor-plugin/workflows/CI/badge.svg",alt:"Build Status"}))," ",Object(o.b)("br",null),"\n",Object(o.b)("a",{parentName:"p",href:"https://github.com/ng-apimock/protractor-plugin"},"@ng-apimock/protractor-plugin")," is the ",Object(o.b)("a",{parentName:"p",href:"https://www.protractortest.org/#/"},"protractor")," plugin for ",Object(o.b)("a",{parentName:"p",href:"https://github.com/ng-apimock/core"},"@ng-apimock/core"),"."),Object(o.b)("p",null,"This plugin connects to ",Object(o.b)("a",{parentName:"p",href:"https://github.com/ng-apimock/core"},"@ng-apimock/core")," middelware and makes the all its features available in the tests."),Object(o.b)("h2",{id:"requirements"},"Requirements"),Object(o.b)("p",null,"see Ng-apimock ",Object(o.b)("a",{parentName:"p",href:"/docs/#requirements"},"requirements")),Object(o.b)("h2",{id:"installing-using-npm--yarn"},"Installing using npm / yarn"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"npm install @ng-apimock/protractor-plugin --save-dev\n")),Object(o.b)("p",null,"or "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"yarn add @ng-apimock/protractor-plugin --dev\n")),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,"Once the plugin has been installed, you can add it as a plugin to your ",Object(o.b)("inlineCode",{parentName:"p"},"protractor.conf.js")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"exports.config = {\n    plugins: [{\n        package: '@ng-apimock/protractor-plugin'\n    }]\n};\n")),Object(o.b)("h3",{id:"plugin-configuration"},"Plugin configuration"),Object(o.b)("p",null,"You can override the global name in the configuration. The plugin will now be available on a global scope under that name."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"exports.config = {\n    plugins: [{\n        package: '@ng-apimock/protractor-plugin',\n        options: {\n            globalName: 'client' // defaults to ngApimock\n        }\n    }]\n};\n")),Object(o.b)("h2",{id:"using-in-tests"},"Using in tests"),Object(o.b)("p",null,"Import the base client which contains the interface"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"import { Client } from '@ng-apimock/base-client';\n\ndeclare const client: Client; // the name of the constant should match the global name: \n")),Object(o.b)("p",null,"Now you can use it."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"describe('Some test', () => {\n    it('does something', async () => \n        await client.selectScenario('my-mock-name', 'some-scenario'));\n});\n")),Object(o.b)("h2",{id:"api"},"API"),Object(o.b)("p",null,"See ",Object(o.b)("a",{parentName:"p",href:"/docs/api/select-scenario"},"API")))}u.isMDXComponent=!0}}]);