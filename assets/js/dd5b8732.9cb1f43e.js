(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{102:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return d}));var r=t(0),a=t.n(r);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),s=function(e){var n=a.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},u=function(e){var n=s(e.components);return a.a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,i=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=s(t),b=r,d=u["".concat(i,".").concat(b)]||u[b]||m[b]||c;return t?a.a.createElement(d,p(p({ref:n},l),{},{components:t})):a.a.createElement(d,p({ref:n},l))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,i=new Array(c);i[0]=b;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var l=2;l<c;l++)i[l]=t[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},97:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return p})),t.d(n,"toc",(function(){return o})),t.d(n,"default",(function(){return s}));var r=t(3),a=t(8),c=(t(0),t(102)),i={id:"dev-interface",title:"Development interface",sidebar_label:"Development interface"},p={unversionedId:"plugins/dev-interface",id:"plugins/dev-interface",isDocsHomePage:!1,title:"Development interface",description:"@ng-apimock/dev-interface is the development interface for @ng-apimock/core.",source:"@site/docs/plugins/dev-interface.md",slug:"/plugins/dev-interface",permalink:"/docs/plugins/dev-interface",editUrl:"https://github.com/ng-apimock/ng-apimock.github.io/tree/develop/docs/docs/plugins/dev-interface.md",version:"current",lastUpdatedBy:"Mischa Dasberg",sidebar_label:"Development interface",sidebar:"docs",previous:{title:"Plugin introduction",permalink:"/docs/plugins/plugin-introduction"},next:{title:"Protractor plugin",permalink:"/docs/plugins/protractor-plugin"}},o=[{value:"Requirements",id:"requirements",children:[]},{value:"Installing using npm / yarn",id:"installing-using-npm--yarn",children:[]},{value:"Usage",id:"usage",children:[{value:"Middleware",id:"middleware",children:[]},{value:"Minimal setup example",id:"minimal-setup-example",children:[]}]}],l={toc:o};function s(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://github.com/ng-apimock/dev-interface"},"@ng-apimock/dev-interface")," is the development interface for ",Object(c.b)("a",{parentName:"p",href:"https://github.com/ng-apimock/core"},"@ng-apimock/core"),"."),Object(c.b)("p",null,"The development interface is a small web application that connects to the ",Object(c.b)("a",{parentName:"p",href:"https://github.com/ng-apimock/core"},"@ng-apimock/core")," middelware and exposes all its features in the ui."),Object(c.b)("p",null,Object(c.b)("img",{parentName:"p",src:"/img/dev-interface.png",alt:"alt text",title:"Development interface"})),Object(c.b)("h2",{id:"requirements"},"Requirements"),Object(c.b)("p",null,"see Ng-apimock ",Object(c.b)("a",{parentName:"p",href:"/docs/#requirements"},"requirements")),Object(c.b)("h2",{id:"installing-using-npm--yarn"},"Installing using npm / yarn"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-bash"},"npm install @ng-apimock/dev-interface --save-dev\n")),Object(c.b)("p",null,"or "),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-bash"},"yarn add @ng-apimock/dev-interface --dev\n")),Object(c.b)("h2",{id:"usage"},"Usage"),Object(c.b)("p",null,"Once the plugin has been installed, you can require it with this line of JavaScript:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},"const devInterface = require('@ng-apimock/dev-interface');\n")),Object(c.b)("h3",{id:"middleware"},"Middleware"),Object(c.b)("p",null,"The final step to take is to register ",Object(c.b)("a",{parentName:"p",href:"https://github.com/ng-apimock/core"},"@ng-apimock/core")," as middleware. It is compatible with both ",Object(c.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/connect"},"Connect")," and ",Object(c.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/express"},"Express")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},"const connect = require('connect');\nconst app = connect();\n\napp.use('/dev-interface/', serveStatic(devInterface));\n")),Object(c.b)("p",null,"or "),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},"const express = require('express');\nconst app = express();\n\napp.use('/dev-interface', express.static(devInterface));\n")),Object(c.b)("h3",{id:"minimal-setup-example"},"Minimal setup example"),Object(c.b)("p",null,"This is a minimal setup example of how you can manually use @ng-apimock/core"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},"const apimock = require('@ng-apimock/core');\nconst devInterface = require('@ng-apimock/dev-interface');\nconst express = require('express');\nconst app = express();\napp.set('port', 9999);\n\napimock.processor.process({\n    src: 'mocks'\n});\n\napp.use(apimock.middleware);\napp.use('/dev-interface', express.static(devInterface));\n\napp.listen(app.get('port'), () => {\n    console.log('@ng-apimock/core running on port', app.get('port'));\n    console.log('@ng-apimock/dev-interface is available under /dev-interface');\n});\n")),Object(c.b)("p",null,"To start up the script just type:  "),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-bash"},"node serve.js\n")),Object(c.b)("p",null,"The development interface can now be used by navigating to ",Object(c.b)("a",{parentName:"p",href:"http://localhost:9000/dev-interface"},"http://localhost:9000/dev-interface"),"."))}s.isMDXComponent=!0}}]);