"use strict";(self.webpackChunk_ng_apimock_docs=self.webpackChunk_ng_apimock_docs||[]).push([[217],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=i,k=m["".concat(l,".").concat(u)]||m[u]||d[u]||r;return n?a.createElement(k,o(o({ref:t},c),{},{components:n})):a.createElement(k,o({ref:t},c))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9803:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var a=n(3117),i=n(102),r=(n(7294),n(3905)),o=["components"],s={id:"installation",title:"Installation",sidebar_label:"Installation",description:"How do I use @ng-apimock?",custom_edit_url:"https://github.com/ng-apimock/core/edit/master/docs/installation.md",keywords:["ng-apimock","core","api","getting started","mocks","variables","presets"]},l=void 0,p={unversionedId:"installation",id:"installation",isDocsHomePage:!1,title:"Installation",description:"How do I use @ng-apimock?",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/docs/installation",editUrl:"https://github.com/ng-apimock/core/edit/master/docs/installation.md",tags:[],version:"current",lastUpdatedBy:"Mischa Dasberg",frontMatter:{id:"installation",title:"Installation",sidebar_label:"Installation",description:"How do I use @ng-apimock?",custom_edit_url:"https://github.com/ng-apimock/core/edit/master/docs/installation.md",keywords:["ng-apimock","core","api","getting started","mocks","variables","presets"]},sidebar:"docs",next:{title:"Mocks",permalink:"/docs/mocks"}},c=[{value:"Requirements",id:"requirements",children:[],level:2},{value:"Installing using npm / yarn",id:"installing-using-npm--yarn",children:[],level:2},{value:"Usage",id:"usage",children:[{value:"Processor",id:"processor",children:[],level:3},{value:"Middleware",id:"middleware",children:[{value:"Middleware body limit",id:"middleware-body-limit",children:[],level:4},{value:"Middleware configuration",id:"middleware-configuration",children:[],level:4}],level:3},{value:"Minimal setup example",id:"minimal-setup-example",children:[],level:3},{value:"Endpoints",id:"endpoints",children:[],level:3}],level:2}],d={toc:c};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Ng-apimock is essentially a set of npm ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ng-apimock"},"packages")," that can be installed over npm."),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node.js")," version >= 10.15.1 or above (which can be checked by running ",(0,r.kt)("inlineCode",{parentName:"li"},"node -v"),"). You can use ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/nvm-sh/nvm"},"nvm")," for managing multiple Node versions on a single machine installed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://yarnpkg.com/en/"},"Yarn")," version >= 1.5 (which can be checked by running ",(0,r.kt)("inlineCode",{parentName:"li"},"yarn version"),"). Yarn is a performant package manager for JavaScript and replaces the ",(0,r.kt)("inlineCode",{parentName:"li"},"npm")," client. It is not strictly necessary but highly encouraged.\nTo add the standard WireMock JAR as a project dependency, put the following in the dependencies section of your build file:")),(0,r.kt)("h2",{id:"installing-using-npm--yarn"},"Installing using npm / yarn"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @ng-apimock/core --save-dev\n")),(0,r.kt)("p",null,"or "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @ng-apimock/core --dev\n")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Once the plugin has been installed, you can require it with this line of JavaScript:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const apimock = require('@ng-apimock/core');\n")),(0,r.kt)("h3",{id:"processor"},"Processor"),(0,r.kt)("p",null,"The next step is to tell ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ng-apimock/core"},"@ng-apimock/core")," where it can find the mocks and / or presets.\nYou can do that by calling the processor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"apimock.processor.process({\n    src: 'mocks', // required\n    patterns: { // optional\n        mocks: '**/*Mock.json', // optional: default is '**/*.mock.json'\n        presets: '**/*Preset.json', // optional: default is '**/*.preset.json'\n    },\n    watches: { // optional\n        mocks: '**/*.json', // optional: no default, set if watch files regex is different from mocks pattern\n        presets: '**/*.json' // optional: no default, set if watch files regex is different from presets pattern\n    },\n    watch: true // optional: default is 'false'\n});\n")),(0,r.kt)("p",null,"There are 4 parameters here:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"src"),": this is the directory that will be used to search for mocks and presets."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"patterns"),": there are 2 regex patterns that can be overridden, mocks and presets. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"watches"),": set these if the patterns differ from the files to watch. Typically needed when using js instead of json."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"watch"),": set to true will ensure that ng-apimock will watch for file changes.")),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"As a side-effect, when a mock or preset change has been detected, the saved state will be reset."))),(0,r.kt)("h3",{id:"middleware"},"Middleware"),(0,r.kt)("p",null,"The final step to take is to register ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ng-apimock/core"},"@ng-apimock/core")," as middleware. It is compatible with both ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/connect"},"Connect")," and ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/express"},"Express")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const connect = require('connect');\nconst app = connect();\n\napp.use(apimock.middleware);\n")),(0,r.kt)("p",null,"or "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const express = require('express');\nconst app = express();\n\napp.use(apimock.middleware);\n")),(0,r.kt)("h4",{id:"middleware-body-limit"},"Middleware body limit"),(0,r.kt)("p",null,"The default bodyParser library that is used has a body limit is ",(0,r.kt)("inlineCode",{parentName:"p"},"100kb"),". In order to increase the limit you can set the limit like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"app.use(bodyParser.json({limit: '10mb'}));\n")),(0,r.kt)("h4",{id:"middleware-configuration"},"Middleware configuration"),(0,r.kt)("p",null,"You can configure apimock with a configuration object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"apimock.configure({\n    middleware:{\n        useHeader: true, // optional: indicator to use a header instead of a cookie to provide the identifier. (defaults to false)\n        identifier: 'my-identifier' // optional: name of the header or cookie that is used as the identifier. (defaults to 'apimockid')\n    }\n});\n")),(0,r.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The cookie or header is used to make sure that parallel executed tests ",(0,r.kt)("strong",{parentName:"p"},"do not interfere")," with each other. Each session is fully isolated.   "))),(0,r.kt)("h3",{id:"minimal-setup-example"},"Minimal setup example"),(0,r.kt)("p",null,"This is a minimal setup example of how you can manually use @ng-apimock/core"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const apimock = require('@ng-apimock/core');\nconst express = require('express');\nconst app = express();\napp.set('port', 9999);\n\napimock.processor.process({\n    src: 'mocks'\n});\n\napp.use(apimock.middleware);\n\napp.listen(app.get('port'), () => {\n    console.log('@ng-apimock/core running on port', app.get('port'));\n});\n")),(0,r.kt)("p",null,"To start up the script just type:  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"node serve.js\n")),(0,r.kt)("h3",{id:"endpoints"},"Endpoints"),(0,r.kt)("p",null,"There are a few endpoints available when you startup ",(0,r.kt)("inlineCode",{parentName:"p"},"@ng-apimock/core"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/info")," - responsible for providing information of the running instance"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/health")," - responsible for providing status information"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/health/readiness")," - readiness probe"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/health/liveness")," - liveness probe")))}m.isMDXComponent=!0}}]);