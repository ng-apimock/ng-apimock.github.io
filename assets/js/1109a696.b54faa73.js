(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{102:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return g}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=i.a.createContext({}),l=function(e){var n=i.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=l(e.components);return i.a.createElement(p.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=r,g=u["".concat(o,".").concat(m)]||u[m]||b[m]||a;return t?i.a.createElement(g,c(c({ref:n},p),{},{components:t})):i.a.createElement(g,c({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var p=2;p<a;p++)o[p]=t[p];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},69:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return l}));var r=t(3),i=t(8),a=(t(0),t(102)),o={id:"wdio-ng-apimock-service",title:"Webdriverio service",sidebar_label:"Webdriverio service",description:"How do I use the wdio-ng-apimock-service for @ng-apimock?",custom_edit_url:"https://github.com/ng-apimock/webdriverio-plugin/edit/master/docs/wdio-ng-apimock-service.md",keywords:["ng-apimock","core","api","wdio-ng-apimock-service","webdriver","webdriver.io","plugin","automated testing"]},c={unversionedId:"plugins/wdio-ng-apimock-service",id:"plugins/wdio-ng-apimock-service",isDocsHomePage:!1,title:"Webdriverio service",description:"How do I use the wdio-ng-apimock-service for @ng-apimock?",source:"@site/docs/plugins/wdio-ng-apimock-service.md",slug:"/plugins/wdio-ng-apimock-service",permalink:"/docs/plugins/wdio-ng-apimock-service",editUrl:"https://github.com/ng-apimock/webdriverio-plugin/edit/master/docs/wdio-ng-apimock-service.md",version:"current",sidebar_label:"Webdriverio service",sidebar:"docs",previous:{title:"Protractor plugin",permalink:"/docs/plugins/protractor-plugin"},next:{title:"Cypress plugin",permalink:"/docs/plugins/cypress-plugin"}},s=[{value:"Requirements",id:"requirements",children:[]},{value:"Installing using npm / yarn",id:"installing-using-npm--yarn",children:[]},{value:"Usage",id:"usage",children:[{value:"Plugin configuration",id:"plugin-configuration",children:[]}]},{value:"Using in tests",id:"using-in-tests",children:[]},{value:"API",id:"api",children:[]}],p={toc:s};function l(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/wdio-ng-apimock-service"},Object(a.b)("img",{parentName:"a",src:"https://img.shields.io/npm/v/wdio-ng-apimock-service?color=brightgreen",alt:"npm"}))," ",Object(a.b)("a",{parentName:"p",href:"https://github.com/ng-apimock/webdriverio-plugin/actions?workflow=CI"},Object(a.b)("img",{parentName:"a",src:"https://github.com/ng-apimock/webdriverio-plugin/workflows/CI/badge.svg",alt:"Build Status"}))," "),Object(a.b)("p",null,"This plugin connects to ",Object(a.b)("a",{parentName:"p",href:"https://github.com/ng-apimock/core"},"@ng-apimock/core")," middelware and makes the all its features available in the tests."),Object(a.b)("h2",{id:"requirements"},"Requirements"),Object(a.b)("p",null,"see Ng-apimock ",Object(a.b)("a",{parentName:"p",href:"/docs/#requirements"},"requirements")),Object(a.b)("h2",{id:"installing-using-npm--yarn"},"Installing using npm / yarn"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"npm install wdio-ng-apimock-service --save-dev\n")),Object(a.b)("p",null,"or "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"yarn add wdio-ng-apimock-service --dev\n")),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("p",null,"Once the plugin has been installed, you can add it as a plugin to your ",Object(a.b)("inlineCode",{parentName:"p"},"protractor.conf.js")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"exports.config = {\n    services: [['ng-apimock']]\n};\n")),Object(a.b)("h3",{id:"plugin-configuration"},"Plugin configuration"),Object(a.b)("p",null,"You can override the global name in the configuration. The plugin will now be available on a global scope under that name."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"exports.config = {\n    services: [['ng-apimock',  {\n        globalName: 'client' // optional option (defaults to ngApimock)  \n    }]]\n};\n")),Object(a.b)("h2",{id:"using-in-tests"},"Using in tests"),Object(a.b)("p",null,"Import the base client which contains the interface"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"import { Client } from '@ng-apimock/base-client';\n\ndeclare const client: Client; // the name of the constant should match the global name: \n")),Object(a.b)("p",null,"Now you can use it."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"describe('Some test', () => {\n    it('does something', async () => \n        await client.selectScenario('my-mock-name', 'some-scenario'));\n});\n")),Object(a.b)("h2",{id:"api"},"API"),Object(a.b)("p",null,"See ",Object(a.b)("a",{parentName:"p",href:"/docs/api/select-scenario"},"API")))}l.isMDXComponent=!0}}]);