(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{137:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return l}));var r=t(2),a=t(9),o=(t(0),t(170)),i={id:"presets",title:"Presets",sidebar_label:"Presets"},c={id:"presets",isDocsHomePage:!1,title:"Presets",description:"A preset in @ng-apimock/core is represented in a json file.",source:"@site/docs/presets.md",permalink:"/docs/presets",editUrl:"https://github.com/ng-apimock/ng-apimock.github.io/tree/develop/docs/docs/presets.md",lastUpdatedBy:"Mischa Dasberg",sidebar_label:"Presets",sidebar:"docs",previous:{title:"Variables",permalink:"/docs/variables"},next:{title:"Docker",permalink:"/docs/docker"}},s=[{value:"Writing a preset file",id:"writing-a-preset-file",children:[]},{value:"Actions",id:"actions",children:[]},{value:"JSON schema",id:"json-schema",children:[]}],p={rightToc:s};function l(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A preset in ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/ng-apimock/core"}),"@ng-apimock/core")," is represented in a json file.\nIt allows you to set the state of one or multiple mocks and set variables all at once."),Object(o.b)("p",null,"This can for instance be used to set all the mocks correctly for your happy or onhappy flow."),Object(o.b)("h2",{id:"writing-a-preset-file"},"Writing a preset file"),Object(o.b)("p",null,"Presets in ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/ng-apimock/core"}),"@ng-apimock/core")," are written in json.\nThere is only one rule to follow when writing a preset file."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"It has a unique name")),Object(o.b)("p",null,"So writing a simple preset could look like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n    "name": "happy flow",\n    "mocks": {\n        "some mock": {\n          "scenario": "ok",\n          "delay": 3000\n        }\n      },\n      "variables": {\n        "something": "awesome"\n      }\n}\n')),Object(o.b)("p",null,"Writing a preset should always follow the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"#json-schema"}),"json schema"),"."),Object(o.b)("h2",{id:"actions"},"Actions"),Object(o.b)("p",null,"Selecting a preset can be done by using the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"plugins"}),"available clients"),"."),Object(o.b)("h2",{id:"json-schema"},"JSON schema"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n    "$schema": "http://json-schema.org/draft-07/schema#",\n    "description": "Preset",\n    "properties": {\n        "mocks": {\n            "additionalProperties": {\n                "$ref": "#/definitions/MockState"\n            },\n            "type": "object"\n        },\n        "name": {\n            "type": "string"\n        },\n        "variables": {\n            "additionalProperties": {\n                "type": "string"\n            },\n            "type": "object"\n        }\n    },\n    "required": ["name", "mocks", "variables"],\n    "type": "object",\n    "definitions": {\n        "MockState": {\n            "description": "Mock state",\n            "properties": {\n                "delay": {\n                    "type": "number"\n                },\n                "echo": {\n                    "type": "boolean"\n                },\n                "scenario": {\n                    "type": "string"\n                }\n            },\n            "type": "object"\n        }\n    }\n}\n')))}l.isMDXComponent=!0},170:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return d}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),l=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},b=function(e){var n=l(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),b=l(t),m=r,d=b["".concat(i,".").concat(m)]||b[m]||u[m]||o;return t?a.a.createElement(d,c(c({ref:n},p),{},{components:t})):a.a.createElement(d,c({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=t[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);